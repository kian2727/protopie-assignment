openapi: "3.0.3"
info:
  title: "사용자 관리 API"
  description: "인증 기능이 포함된 사용자 관리 시스템"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
paths:
  /health:
    get:
      summary: "서버 상태 확인"
      description: "애플리케이션 정상 동작 여부 확인"
      responses:
        "200":
          description: "서버 정상 동작 중"
          content:
            text/plain:
              schema:
                type: "string"
              example: "OK"
        "500":
          description: "서버 오류 발생"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "서버에 문제가 발생했습니다."

  /signup:
    post:
      summary: "회원가입"
      description: "새로운 사용자 등록"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
      responses:
        "204":
          description: "회원가입 성공"
        "409":
          description: "이메일 중복"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "이미 이메일이 존재합니다.[email=example@email.com]"

  /signin:
    post:
      summary: "로그인"
      description: "사용자 인증 및 접근 토큰 발급"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
      responses:
        "200":
          description: "로그인 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignInResponse"
        "404":
          description: "사용자를 찾을 수 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "유저를 찾을 수 없습니다."

  /users:
    get:
      summary: "전체 사용자 목록 조회"
      description: "모든 사용자 목록 조회 (관리자 전용)"
      security:
        - bearerAuth: []
      parameters:
        - name: "page"
          in: "query"
          description: "페이지 번호"
          schema:
            type: "integer"
            default: 1
        - name: "size"
          in: "query"
          description: "페이지당 항목 수"
          schema:
            type: "integer"
            default: 10
      responses:
        "200":
          description: "사용자 목록 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersResponse"
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "토큰이 유효하지 않거나 만료되었습니다."
        "403":
          description: "권한 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "유저의 Role이 'ADMIN'이 아닙니다."
        "404":
          description: "사용자를 찾을 수 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "유저를 찾을 수 없습니다."

  /users/{userId}:
    parameters:
      - name: "userId"
        in: "path"
        required: true
        description: "사용자 고유 식별자"
        schema:
          type: "string"
          format: "uuid"
    get:
      summary: "사용자 정보 조회"
      description: "특정 사용자의 상세 정보 조회"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "사용자 정보 조회 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "사용자 ID를 찾을 수 없습니다."
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "토큰이 유효하지 않거나 만료되었습니다."
        "403":
          description: "권한 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "본인의 정보만 조회할 수 있습니다."
    
    put:
      summary: "사용자 정보 수정"
      description: "사용자 정보 업데이트"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
      responses:
        "200":
          description: "사용자 정보 수정 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "잘못된 사용자 권한입니다."
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "토큰이 유효하지 않거나 만료되었습니다."
        "403":
          description: "권한 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "본인의 정보만 수정할 수 있습니다."
    
    delete:
      summary: "회원 탈퇴"
      description: "사용자 계정 삭제"
      security:
        - bearerAuth: []
      responses:
        "204":
          description: "회원 탈퇴 성공"
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "사용자 ID를 찾을 수 없습니다."
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "토큰이 유효하지 않거나 만료되었습니다."
        "403":
          description: "권한 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: "본인의 계정만 삭제할 수 있습니다."

components:
  securitySchemes:
    bearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
      description: "JWT 토큰을 이용한 인증"

  schemas:
    ErrorResponse:
      type: "object"
      properties:
        message:
          type: "string"
          description: "에러 메시지"

    SignUpRequest:
      type: "object"
      required:
        - "email"
        - "username"
        - "password"
      properties:
        email:
          type: "string"
          format: "email"
          description: "사용자 이메일"
        username:
          type: "string"
          description: "사용자 이름"
        password:
          type: "string"
          format: "password"
          description: "비밀번호"
        role:
          type: "string"
          enum: ["USER", "ADMIN"]
          default: "USER"
          description: "사용자 권한 (기본값: USER)"

    SignInRequest:
      type: "object"
      required:
        - "email"
        - "password"
      properties:
        email:
          type: "string"
          format: "email"
          description: "사용자 이메일"
        password:
          type: "string"
          format: "password"
          description: "비밀번호"

    SignInResponse:
      type: "object"
      properties:
        accessToken:
          type: "string"
          description: "인증 토큰 (JWT)"

    UpdateUserRequest:
      type: "object"
      properties:
        email:
          type: "string"
          format: "email"
          description: "변경할 이메일"
        password:
          type: "string"
          format: "password"
          description: "변경할 비밀번호"
        username:
          type: "string"
          description: "변경할 사용자 이름"
        role:
          type: "string"
          enum: ["USER", "ADMIN"]
          description: "변경할 사용자 권한"

    UserResponse:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
          description: "사용자 고유 식별자"
        email:
          type: "string"
          format: "email"
          description: "사용자 이메일"
        password:
          type: "string"
          description: "비밀번호"
        username:
          type: "string"
          description: "사용자 이름"
        role:
          type: "string"
          enum: ["USER", "ADMIN"]
          description: "사용자 권한"
        isActive:
          type: "boolean"
          description: "계정 활성화 상태"
        deletedAt:
          type: "string"
          format: "date-time"
          nullable: true
          description: "계정 삭제 일시"
        createdAt:
          type: "string"
          format: "date-time"
          description: "계정 생성 일시"
        updatedAt:
          type: "string"
          format: "date-time"
          description: "정보 수정 일시"

    UsersResponse:
      type: "object"
      properties:
        elements:
          type: "array"
          items:
            $ref: "#/components/schemas/UserResponse"
          description: "사용자 목록"
        page:
          type: "integer"
          description: "현재 페이지 번호"
        size:
          type: "integer"
          description: "페이지당 항목 수"
        totalCount:
          type: "integer"
          description: "전체 사용자 수"